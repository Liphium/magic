package mrunner

import (
	"fmt"
)

const PlanPrefix = "mgc:"

const runFile = `// Automagically generated by Magic
package main

import (
	"os"
	"log"
	"fmt"
	
	"github.com/Liphium/magic/mconfig"
	"github.com/Liphium/magic/mrunner"
)

func main() {
	if len(os.Args) < 5 {
		log.Fatalln("Please specify module name, config, profile and magic directory!")
	}
	modName := os.Args[1]
	config := os.Args[2]
	profile := os.Args[3]
	magicDir := os.Args[4]

	// Create context
	context := mconfig.DefaultContext(modName, config, profile, magicDir)
	Run(context)

	// Create the runner from context
	runner, err := mrunner.NewRunner(context)
	if err != nil {
		log.Fatalln("Couldn't create runner:", err)
	}

	fmt.Println(mrunner.PlanPrefix + runner.GeneratePlan())

%s
%s
}
`

const runFileDeleter = `
	// Delete all the containers and state
	runner.Clear()
`

const runFileDeployer = `
	// Deploy the containers and start
	runner.Deploy(%t)

	// Start the app
	Start()
`

// Generate the run file calling the runner
func GenerateRunFile(deployContainers bool, deleteContainers bool) string {
	deleter := ""
	deployer := ""
	if deployContainers {
		deployer = fmt.Sprintf(runFileDeployer, deleteContainers)
	}
	if deleteContainers {
		deleter = runFileDeleter
	}
	return fmt.Sprintf(runFile, deleter, deployer)
}
